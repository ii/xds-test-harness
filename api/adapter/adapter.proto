syntax = "proto3";

option go_package = "github.com/zachmandeville/tester-prototype/adapter/adapter";

package adapter;

message Endpoint {
  string name    = 1;
  string cluster = 2;
  string address = 3;
}

message Cluster {
  string name                       = 1;
  map<string,int32> connect_timeout = 2;
}
message Route {
  string name = 1;
}
message Listener {
  string name    = 1;
  string address = 2;
}
message Runtime {
  string name = 1;
}

message Secret {
  string name = 1;
}

message Endpoints {
  repeated Endpoint items = 1;
}

message Clusters {
  repeated Cluster items = 1;
}

message Routes {
  repeated Route items = 1;
}

message Listeners {
  repeated Listener items = 1;
}

message Runtimes {
  repeated Runtime items = 1;
}

message Secrets {
  repeated Secret items = 1;
}

message Snapshot {
  string node = 1;
  string version = 2;
  Endpoints endpoints = 3;
  Clusters clusters = 4;
  Routes routes = 5;
  Listeners listeners = 6;
  Runtimes runtimes = 7;
  Secrets secrets = 8;
}

message Resource {
  string name = 1;
}

message ResourceRequest {
  string node = 1;
  string typeURL = 2;
  string resourceName = 3;
  string version = 4;
}


message AddResourceResponse {
  string message = 1;
}

message UpdateResourceResponse {
  string message = 1;
}

message RemoveResourceResponse {
  string message = 1;
}

message SetStateResponse {
  string message = 1;
}

message UpdateStateResponse {
  string message = 1;
}


message clearRequest {
  string node = 1;
}

message clearResponse {
  string response = 1;
}

service Adapter {
  rpc SetState(Snapshot) returns (SetStateResponse){}
  rpc UpdateState(Snapshot) returns (UpdateStateResponse){}
  rpc ClearState(clearRequest) returns (clearResponse) {}
  rpc UpdateResource(ResourceRequest) returns (UpdateResourceResponse) {}
  rpc AddResource(ResourceRequest) returns (AddResourceResponse){}
  rpc RemoveResource(ResourceRequest) returns (RemoveResourceResponse){}
}
